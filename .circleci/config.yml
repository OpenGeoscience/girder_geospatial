initialize-venv: &initialize-venv
  name: Initialize Virtual Environment
  command: |
    python -m virtualenv ../venv || python -m venv ../venv
    . ../venv/bin/activate
    pip install tox

ci-steps: &ci-steps
  steps:
    - checkout:
        path: ~/geometa
    - run:
        <<: *initialize-venv
    - run:
        name: Install mongodb
        command: |
          apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
          echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | tee /etc/apt/sources.list.d/mongodb.list
          apt update && apt install mongodb-org -y
          mkdir -p /data/db

    - run:
        name: Run the tests
        command: |
          . ../venv/bin/activate
          mongod > /dev/null 2>&1 &
          tox -e $TEST_TOX_ENV -c ~/geometa

version: 2
jobs:
  python27:
    docker:
      - image: python:2.7
    environment:
     - TEST_TOX_ENV: "py27"
    <<: *ci-steps

  python35:
    docker:
      - image: python:3.5
    environment:
     - TEST_TOX_ENV: "py35"
    <<: *ci-steps

  python36:
    docker:
      - image: python:3.6
    environment:
     - TEST_TOX_ENV: "py36"
    <<: *ci-steps

  python37:
    docker:
      - image: python:3.7
    environment:
     - TEST_TOX_ENV: "py37"
    <<: *ci-steps

  linting:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "lint"
    <<: *ci-steps

workflows:
  version: 2
  test:
    jobs:
      - python27
      - python35
      - python36
      - python37
      - linting
