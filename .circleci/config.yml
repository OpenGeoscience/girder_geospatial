initialize-venv: &initialize-venv
  name: Initialize Virtual Environment
  command: |
    python -m virtualenv ../venv || python -m venv ../venv
    . ../venv/bin/activate

ci-steps: &ci-steps
  steps:
    - checkout:
        path: ~/geometa
    - run:
        <<: *initialize-venv
    - run:
        name: Run the tests
        command: |
          mongod > /dev/null 2>&1 &
          tox -e $TEST_TOX_ENV -c ~/geometa

version: 2
jobs:
  python27-girder-2:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py27-girder-2"
    <<: *ci-steps

  python35-girder-2:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py35-girder-2"
    <<: *ci-steps

  python36-girder-2:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py36-girder-2"
    <<: *ci-steps

  python27-girder-3:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py27-girder-3"
    <<: *ci-steps

  python35-girder-3:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py35-girder-3"
    <<: *ci-steps

  python36-girder-3:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "py36-girder-3"
    <<: *ci-steps

  linting:
    docker:
      - image: dozturk2/girder_geospatial
    environment:
     - TEST_TOX_ENV: "lint"
    <<: *ci-steps

workflows:
  version: 2
  test:
    jobs:
      - python27-girder-2
      - python35-girder-2
      - python36-girder-2
      - python27-girder-3
      - python35-girder-3
      - python36-girder-3
      - linting
